version: "3.4"

services:
#######################################################
#  Sql Server
#######################################################
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
        SA_PASSWORD: "SqlServer2019!"
        ACCEPT_EULA: "Y"
        MSSQL_PID: "Developer"
    ports:
      - "1433:1433"
    networks:
      - saleproduct-network

#######################################################
#  Mongo
#######################################################
  mongo:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: MongoDB2019!
    ports:
      - "27017:27017"
    volumes:
      - /home/renatogroffe/Desenvolvimento/Docker/Volumes/MongoDB:/data/db
    networks:
      - saleproduct-network

#######################################################
#  Zookeeper
#######################################################
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    hostname: zookeeper
    container_name: zookeeper
    volumes:
      - "zookeeper_data:/salesproduct"
    networks:
        - saleproduct-network
    ports:
        - "2181:2181"
    environment:
        ZOOKEEPER_CLIENT_PORT: 2181
        ZOOKEEPER_TICK_TIME: 2000

#######################################################
#  Kafka
#######################################################
  kafka:
    image: confluentinc/cp-kafka:7.0.1
    hostname: kafka
    container_name: kafka
    restart: always
    volumes:
      - "kafka_data:/salesproduct"
    depends_on:
        - zookeeper
    networks:
        - saleproduct-network
    ports:
        - "9092:9092"
    environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        ADVERTISED_HOST_NAME: kafka
        KAFKA_ADVERTISED_HOSTNAME: 127.0.0.1

  init-kafka:
    image: confluentinc/cp-kafka:7.0.1
    depends_on:
        - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    networks:
        - saleproduct-network
    command: |
        "
        # blocks until kafka is reachable
        kafka-topics --bootstrap-server kafka:29092 --list

        echo -e 'Creating kafka topics'
        kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic Orders --replication-factor 1 --partitions 1

        echo -e 'Successfully created the following topics:'
        kafka-topics --bootstrap-server kafka:29092 --list
        "
#######################################################
#  Mongo Client
#######################################################
  mongo-express:
    image: mongo-express
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: renatogroffe
      ME_CONFIG_BASICAUTH_PASSWORD: MongoExpress2019!
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: MongoDB2019!
    links:
      - mongo
    networks:
      - saleproduct-network

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
   
networks:
    saleproduct-network:
      driver: bridge
